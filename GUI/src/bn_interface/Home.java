/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bn_interface;

import java.awt.Component;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JSpinner;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author nonwhite
 */
public class Home extends javax.swing.JFrame {

	/**
	 * Creates new form Home
	 */
	public Home() {
		initComponents();
		setDefaults() ;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameApp = new javax.swing.JFrame();
        jTabbedHome = new javax.swing.JTabbedPane();
        jTabbedStructureLearning = new javax.swing.JTabbedPane();
        jPanelGeneralSL = new javax.swing.JPanel();
        jLblDataSet = new javax.swing.JLabel();
        jLblScoreFile = new javax.swing.JLabel();
        jLblBNet = new javax.swing.JLabel();
        jLblDelChar = new javax.swing.JLabel();
        jTxtDataSet = new javax.swing.JTextField();
        jTxtScoresFile = new javax.swing.JTextField();
        jTxtBayesNet = new javax.swing.JTextField();
        jBtnDataSet = new javax.swing.JButton();
        jBtnScoresFile = new javax.swing.JButton();
        jBtnBayesNet = new javax.swing.JButton();
        jChkHasHeader = new javax.swing.JCheckBox();
        jTxtDelimiter = new javax.swing.JTextField();
        jChkSaveFile = new javax.swing.JCheckBox();
        jChkScoresOnly = new javax.swing.JCheckBox();
        jBtnRun = new javax.swing.JButton();
        jChkStructureOptimizationOnly = new javax.swing.JCheckBox();
        jPanelParentSetSelectionSL = new javax.swing.JPanel();
        jLblMethod = new javax.swing.JLabel();
        jLblMaxParentSize = new javax.swing.JLabel();
        jLblRMin = new javax.swing.JLabel();
        jChkWhileCalculatingPrune = new javax.swing.JCheckBox();
        jChkEndOfCalculatingPrune = new javax.swing.JCheckBox();
        jCbxMethod = new javax.swing.JComboBox();
        jSpnMaxParentSize = new javax.swing.JSpinner();
        jSpnRMin = new javax.swing.JSpinner();
        jLblScoringFunction = new javax.swing.JLabel();
        jLblNumThreads = new javax.swing.JLabel();
        jLblTimePerVariable = new javax.swing.JLabel();
        jSpnTimePerVariable = new javax.swing.JSpinner();
        jSpnNumThreads = new javax.swing.JSpinner();
        jCbxScoringFunction = new javax.swing.JComboBox();
        jPanelStructureOptimizationSL = new javax.swing.JPanel();
        jLblAlgorithm = new javax.swing.JLabel();
        jLblNumSolutions = new javax.swing.JLabel();
        jLblMaxIterations = new javax.swing.JLabel();
        jLblInitializer = new javax.swing.JLabel();
        jLblBestScoreCalculator = new javax.swing.JLabel();
        jCbxAlgorithm = new javax.swing.JComboBox();
        jCbxInitializer = new javax.swing.JComboBox();
        jSpnNumSolutions = new javax.swing.JSpinner();
        jSpnMaxIterations = new javax.swing.JSpinner();
        jCbxBestScoreCalculator = new javax.swing.JComboBox();
        jTabbedMultiLabelClassification = new javax.swing.JTabbedPane();
        jPanelGeneralMLC = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelOtherParametersMLC = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrameAppLayout = new javax.swing.GroupLayout(jFrameApp.getContentPane());
        jFrameApp.getContentPane().setLayout(jFrameAppLayout);
        jFrameAppLayout.setHorizontalGroup(
            jFrameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrameAppLayout.setVerticalGroup(
            jFrameAppLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("jFrameApp"); // NOI18N

        jLblDataSet.setText("Data Set (.csv)");

        jLblScoreFile.setText("Scores File (.pss)");

        jLblBNet.setText("Bayesian Network (.bnet)");

        jLblDelChar.setText("Delimiter Char.");

        jTxtDataSet.setEditable(false);

        jTxtScoresFile.setEditable(false);

        jTxtBayesNet.setEditable(false);

        jBtnDataSet.setText("...");
        jBtnDataSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDataSetActionPerformed(evt);
            }
        });

        jBtnScoresFile.setText("...");
        jBtnScoresFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnScoresFileActionPerformed(evt);
            }
        });

        jBtnBayesNet.setText("...");
        jBtnBayesNet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBayesNetActionPerformed(evt);
            }
        });

        jChkHasHeader.setText("Has header?");
        jChkHasHeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChkHasHeaderActionPerformed(evt);
            }
        });

        jChkSaveFile.setText("Save file?");
        jChkSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChkSaveFileActionPerformed(evt);
            }
        });

        jChkScoresOnly.setText("Only Scores?");
        jChkScoresOnly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChkScoresOnlyActionPerformed(evt);
            }
        });

        jBtnRun.setText("Run!");
        jBtnRun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBtnRunMouseClicked(evt);
            }
        });

        jChkStructureOptimizationOnly.setText("Only Structure Opt.?");
        jChkStructureOptimizationOnly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChkStructureOptimizationOnlyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelGeneralSLLayout = new javax.swing.GroupLayout(jPanelGeneralSL);
        jPanelGeneralSL.setLayout(jPanelGeneralSLLayout);
        jPanelGeneralSLLayout.setHorizontalGroup(
            jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGeneralSLLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLblDataSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLblScoreFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLblBNet, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTxtScoresFile, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtBayesNet, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtDataSet, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnBayesNet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnScoresFile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnDataSet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jChkScoresOnly)
                        .addGroup(jPanelGeneralSLLayout.createSequentialGroup()
                            .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLblDelChar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jChkHasHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(jChkSaveFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(9, 9, 9)
                            .addComponent(jTxtDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jBtnRun, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jChkStructureOptimizationOnly))
                .addContainerGap())
        );
        jPanelGeneralSLLayout.setVerticalGroup(
            jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralSLLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblDataSet)
                    .addComponent(jTxtDataSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnDataSet)
                    .addComponent(jChkHasHeader))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblDelChar)
                    .addComponent(jTxtDelimiter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblScoreFile)
                    .addComponent(jTxtScoresFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnScoresFile)
                    .addComponent(jChkSaveFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jChkScoresOnly)
                .addGap(1, 1, 1)
                .addGroup(jPanelGeneralSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblBNet)
                    .addComponent(jTxtBayesNet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnBayesNet)
                    .addComponent(jChkStructureOptimizationOnly))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnRun)
                .addContainerGap())
        );

        jTabbedStructureLearning.addTab("General", jPanelGeneralSL);

        jLblMethod.setText("Method");

        jLblMaxParentSize.setText("Max Parent Size");

        jLblRMin.setText("rMin");

        jChkWhileCalculatingPrune.setText("While-calculating prune");
        jChkWhileCalculatingPrune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChkWhileCalculatingPruneActionPerformed(evt);
            }
        });

        jChkEndOfCalculatingPrune.setText("End-of-calculating prune");
        jChkEndOfCalculatingPrune.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChkEndOfCalculatingPruneActionPerformed(evt);
            }
        });

        jCbxMethod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sequential" }));
        jCbxMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxMethodActionPerformed(evt);
            }
        });

        jSpnMaxParentSize.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpnMaxParentSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnMaxParentSizeStateChanged(evt);
            }
        });

        jSpnRMin.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(5), Integer.valueOf(5), null, Integer.valueOf(5)));
        jSpnRMin.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnRMinStateChanged(evt);
            }
        });

        jLblScoringFunction.setText("Scoring Function");

        jLblNumThreads.setText("Num Threads");

        jLblTimePerVariable.setText("Time per variable");

        jSpnTimePerVariable.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpnTimePerVariable.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnTimePerVariableStateChanged(evt);
            }
        });

        jSpnNumThreads.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jSpnNumThreads.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnNumThreadsStateChanged(evt);
            }
        });

        jCbxScoringFunction.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BIC" }));
        jCbxScoringFunction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxScoringFunctionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelParentSetSelectionSLLayout = new javax.swing.GroupLayout(jPanelParentSetSelectionSL);
        jPanelParentSetSelectionSL.setLayout(jPanelParentSetSelectionSLLayout);
        jPanelParentSetSelectionSLLayout.setHorizontalGroup(
            jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParentSetSelectionSLLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelParentSetSelectionSLLayout.createSequentialGroup()
                        .addComponent(jChkWhileCalculatingPrune, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(131, 131, 131))
                    .addGroup(jPanelParentSetSelectionSLLayout.createSequentialGroup()
                        .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLblMaxParentSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLblRMin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbxMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSpnRMin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                .addComponent(jSpnMaxParentSize, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(111, 111, 111)))
                .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelParentSetSelectionSLLayout.createSequentialGroup()
                            .addComponent(jLblTimePerVariable)
                            .addGap(25, 25, 25)
                            .addComponent(jSpnTimePerVariable, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jChkEndOfCalculatingPrune))
                    .addGroup(jPanelParentSetSelectionSLLayout.createSequentialGroup()
                        .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblScoringFunction)
                            .addComponent(jLblNumThreads))
                        .addGap(27, 27, 27)
                        .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCbxScoringFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelParentSetSelectionSLLayout.createSequentialGroup()
                                .addComponent(jSpnNumThreads)
                                .addGap(16, 16, 16)))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanelParentSetSelectionSLLayout.setVerticalGroup(
            jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelParentSetSelectionSLLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblMethod)
                    .addComponent(jLblScoringFunction)
                    .addComponent(jCbxMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCbxScoringFunction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblMaxParentSize)
                    .addComponent(jLblNumThreads)
                    .addComponent(jSpnMaxParentSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpnNumThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblRMin)
                    .addComponent(jSpnRMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblTimePerVariable)
                    .addComponent(jSpnTimePerVariable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanelParentSetSelectionSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jChkWhileCalculatingPrune)
                    .addComponent(jChkEndOfCalculatingPrune))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jTabbedStructureLearning.addTab("Parent Set Selection", jPanelParentSetSelectionSL);

        jLblAlgorithm.setText("Algorithm");

        jLblNumSolutions.setText("Num. solutions");

        jLblMaxIterations.setText("Max Iterations");

        jLblInitializer.setText("Initializer");

        jLblBestScoreCalculator.setText("Best Score Calculator");

        jCbxAlgorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Greedy Search" }));
        jCbxAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxAlgorithmActionPerformed(evt);
            }
        });

        jCbxInitializer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Random" }));
        jCbxInitializer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxInitializerActionPerformed(evt);
            }
        });

        jSpnNumSolutions.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jSpnNumSolutions.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnNumSolutionsStateChanged(evt);
            }
        });

        jSpnMaxIterations.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        jSpnMaxIterations.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpnMaxIterationsStateChanged(evt);
            }
        });

        jCbxBestScoreCalculator.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "List" }));
        jCbxBestScoreCalculator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxBestScoreCalculatorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelStructureOptimizationSLLayout = new javax.swing.GroupLayout(jPanelStructureOptimizationSL);
        jPanelStructureOptimizationSL.setLayout(jPanelStructureOptimizationSLLayout);
        jPanelStructureOptimizationSLLayout.setHorizontalGroup(
            jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStructureOptimizationSLLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelStructureOptimizationSLLayout.createSequentialGroup()
                        .addComponent(jLblBestScoreCalculator, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jCbxBestScoreCalculator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelStructureOptimizationSLLayout.createSequentialGroup()
                        .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLblNumSolutions, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jLblAlgorithm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbxAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpnNumSolutions, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLblMaxIterations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLblInitializer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCbxInitializer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpnMaxIterations, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
        );
        jPanelStructureOptimizationSLLayout.setVerticalGroup(
            jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStructureOptimizationSLLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblAlgorithm)
                    .addComponent(jLblInitializer)
                    .addComponent(jCbxAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCbxInitializer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblNumSolutions)
                    .addComponent(jLblMaxIterations)
                    .addComponent(jSpnNumSolutions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpnMaxIterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanelStructureOptimizationSLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblBestScoreCalculator)
                    .addComponent(jCbxBestScoreCalculator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        jTabbedStructureLearning.addTab("Structure Optimization", jPanelStructureOptimizationSL);

        jTabbedHome.addTab("Structure Learning", jTabbedStructureLearning);

        jLabel1.setText("In Construction...");

        javax.swing.GroupLayout jPanelGeneralMLCLayout = new javax.swing.GroupLayout(jPanelGeneralMLC);
        jPanelGeneralMLC.setLayout(jPanelGeneralMLCLayout);
        jPanelGeneralMLCLayout.setHorizontalGroup(
            jPanelGeneralMLCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralMLCLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addContainerGap(506, Short.MAX_VALUE))
        );
        jPanelGeneralMLCLayout.setVerticalGroup(
            jPanelGeneralMLCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralMLCLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jTabbedMultiLabelClassification.addTab("General", jPanelGeneralMLC);

        jLabel2.setText("In Construction...");

        javax.swing.GroupLayout jPanelOtherParametersMLCLayout = new javax.swing.GroupLayout(jPanelOtherParametersMLC);
        jPanelOtherParametersMLC.setLayout(jPanelOtherParametersMLCLayout);
        jPanelOtherParametersMLCLayout.setHorizontalGroup(
            jPanelOtherParametersMLCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOtherParametersMLCLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addContainerGap(506, Short.MAX_VALUE))
        );
        jPanelOtherParametersMLCLayout.setVerticalGroup(
            jPanelOtherParametersMLCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOtherParametersMLCLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addContainerGap(207, Short.MAX_VALUE))
        );

        jTabbedMultiLabelClassification.addTab("Other parameters", jPanelOtherParametersMLC);

        jTabbedHome.addTab("Multi-Label Classification", jTabbedMultiLabelClassification);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedHome)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedHome)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("jFrameApp");

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void setDefaults(){
		// Structure Learning: General Panel
		setHasHeader( false ) ;
		setDelimiterCharacter( ',' ) ;
		setSaveScoresFile( true ) ;
		setScoresOnly( false ) ;
		setStructureOptimizationOnly( false ) ;
	
		// Structure Learning: Parent Set Selection Panel
		initParentSetMethod() ; setParentSetMethod( 0 ) ;
		setMaxParentSetSize( 0 ) ;
		setRMin( 5 ) ;
		setWhileCalculatingPrune( true ) ;
		initScoringFunction() ; setScoringFunction( 0 ) ;
		setNumThreads( 1 ) ;
		setTimePerVariable( 0 ) ;
		setEndOfCalculatingPrune( true ) ;
		
		// Structure Learning: Structure Optimization
		initAlgorithm() ; setAlgorithm( 0 ) ;
		setNumSolutions( 1 ) ;
		initBestScoreCalculator() ; setBestScoreCalculator( 0 ) ;
		initInitializer() ; setBestScoreCalculator( 0 ) ;
		setMaxIterations( 100 ) ;
	}
	
	// <editor-fold defaultstate="collapsed" desc="Modifiers Structure Learning: General Panel">
	private void setHasHeader( boolean value ){
		jChkHasHeader.setSelected( value ) ;
		hasHeader = value ;
	}
	
	private void setSaveScoresFile( boolean value ){
		jChkSaveFile.setSelected( value ) ;
		saveScoresFile = value ;
	}
	
	private void setScoresOnly( boolean value ){
		jChkScoresOnly.setSelected( value ) ;
		scoresOnly = value ;
		
		jBtnBayesNet.setEnabled( !value ) ;
		
		// Enable/Disable all fields in Structure Optimization Panel
		jCbxAlgorithm.setEnabled( !value ) ;
		jSpnNumSolutions.setEnabled( !value ) ;
		jCbxBestScoreCalculator.setEnabled( !value ) ;
		jCbxInitializer.setEnabled( !value ) ;
		jSpnMaxIterations.setEnabled( !value ) ;

		if( value ){
			setStructureOptimizationOnly( false ) ;
		}
	}
	
	private void setStructureOptimizationOnly( boolean value ){
		jChkStructureOptimizationOnly.setSelected( value ) ;
		structureOptimizationOnly = value ;
		jBtnDataSet.setEnabled( !value ) ;
		jChkHasHeader.setEnabled( !value ) ;
		jTxtDelimiter.setEnabled( !value ) ;
			
		// Enable/Disable all fields in Parent Set Selection Panel
		jCbxMethod.setEnabled( !value ) ;
		jSpnMaxParentSize.setEnabled( !value ) ;
		jSpnRMin.setEnabled( !value ) ;
		jChkWhileCalculatingPrune.setEnabled( !value ) ;
		jCbxScoringFunction.setEnabled( !value ) ;
		jSpnNumThreads.setEnabled( !value ) ;
		jSpnTimePerVariable.setEnabled( !value ) ;
		jChkEndOfCalculatingPrune.setEnabled( !value ) ;

		if( value ){
			setScoresOnly( false ) ;
		}
	}
	
	private void setDelimiterCharacter( char delimiter ){
		jTxtDelimiter.setText( "" + delimiter ) ;
		delimiterCharacter = delimiter ;
	}	
	// </editor-fold>
	
	// <editor-fold defaultstate="collapsed" desc="Modifiers Structure Learning: Parent Set Selection Panel">
	private void initParentSetMethod(){
		jCbxMethod.removeAllItems() ;
		jCbxMethod.addItem( "Sequential" ) ;
		jCbxMethod.addItem( "Greedy" ) ;
		jCbxMethod.addItem( "Independence" ) ;
	}
	
	private void setParentSetMethod( int index ){
		jCbxMethod.setSelectedIndex( index ) ;
		parentSetMethod = "" + jCbxMethod.getSelectedItem() ;
		parentSetMethod = parentSetMethod.toLowerCase() ;
		switch( index ){
			case 0 : // Sequential
			case 1 : // Greedy
				setWhileCalculatingPrune( true ) ;
				break ;
			case 2 : // Independence
				setWhileCalculatingPrune( false ) ;
				break ;
		}
	}
	
	private void setMaxParentSetSize( int value ){
		jSpnMaxParentSize.setValue( value ) ;
		maxParentSize = value ;
	}
	
	private void setRMin( int value ){
		jSpnRMin.setValue( value ) ;
		rMin = value ;
	}
	
	private void initScoringFunction(){
		jCbxScoringFunction.removeAllItems() ;
		jCbxScoringFunction.addItem( "BIC" ) ;
	}
	
	private void setScoringFunction( int index ){
		jCbxScoringFunction.setSelectedIndex( index ) ;
		scoringFunction = "" + jCbxScoringFunction.getSelectedItem() ;
		scoringFunction = scoringFunction.toLowerCase() ;
	}
	
	private void setNumThreads( int value ){
		jSpnNumThreads.setValue( value ) ;
		numThreads = value ;
	}
	
	private void setTimePerVariable( int value ){
		jSpnTimePerVariable.setValue( value ) ;
		timePerVariable = value ;
	}
	
	private void setWhileCalculatingPrune( boolean value ){
		jChkWhileCalculatingPrune.setSelected( value ) ;
		whileCalculatingPrune = value ;
	}
	
	private void setEndOfCalculatingPrune( boolean value ){
		jChkEndOfCalculatingPrune.setSelected( value ) ;
		endOfCalculatingPrune = value ;
	}
	// </editor-fold>
	
	// <editor-fold defaultstate="collapsed" desc="Modifiers Structure Learning: Structure Optimization Panel">
	private void initAlgorithm(){
		jCbxAlgorithm.removeAllItems() ;
		jCbxAlgorithm.addItem( "Greedy search" ) ;
	}
	
	private void setAlgorithm( int index ){
		jCbxAlgorithm.setSelectedIndex( index ) ;
		algorithm = "" + jCbxAlgorithm.getSelectedItem() ;
		algorithm = algorithm.toLowerCase() ;
	}
	
	private void setNumSolutions( int value ){
		jSpnNumSolutions.setValue( value ) ;
		numSolutions = value ;
	}
	
	private void initBestScoreCalculator(){
		jCbxBestScoreCalculator.removeAllItems() ;
		jCbxBestScoreCalculator.addItem( "List" ) ;
		jCbxBestScoreCalculator.addItem( "Tree" ) ;
		jCbxBestScoreCalculator.addItem( "Bitwise" ) ;
	}
	
	private void setBestScoreCalculator( int index ){
		jCbxBestScoreCalculator.setSelectedIndex( index ) ;
		bestScoreCalculator = "" + jCbxBestScoreCalculator.getSelectedItem() ;
		bestScoreCalculator = bestScoreCalculator.toLowerCase() ;
	}
	
	private void initInitializer(){
		jCbxInitializer.removeAllItems() ;
		jCbxInitializer.addItem( "Random" ) ;
		jCbxInitializer.addItem( "DFS" ) ;
		jCbxInitializer.addItem( "FAS" ) ;
	}
	
	private void setInitializer( int index ){
		jCbxInitializer.setSelectedIndex( index ) ;
		initializer = "" + jCbxInitializer.getSelectedItem() ;
		initializer = initializer.toLowerCase() ;
	}
	
	private void setMaxIterations( int value ){
		jSpnMaxIterations.setValue( value ) ;
		numIterations = value ;
	}
	// </editor-fold>
	
	private void executeProcess( String command ){
		try {
			Runtime rt = Runtime.getRuntime() ;
			Process pr = rt.exec( command ) ;
				
			BufferedReader stdInput = new BufferedReader( new InputStreamReader( pr.getInputStream() ) ) ;

			// read the output from the command
			String s = stdInput.readLine() ;
			while( s != null ){
				System.out.println( s ) ;
				s = stdInput.readLine() ;
			}
		}catch( IOException ex ){
		}
	}
	
	private String get_command(){
		String command = "./../CLI/dist/" ;
		if( scoresOnly ){
			command += "ScoreCalculator-Mac/GNU-MacOSX/bn_scorer" ;
			command += " " + dataSetPath ;
			command += " " + scoresFilePath ;
			command += " -q " + parentSetMethod ;
			command += " -d " + delimiterCharacter ;
			command += " -m " + rMin ;
			command += " -p " + maxParentSize ;
			command += " -t " + numThreads ;
			command += " -r " + timePerVariable ;
			command += ( hasHeader ? " -s" : "" ) ;
			command += ( endOfCalculatingPrune ? "" : " -o" ) ;
			command += ( whileCalculatingPrune ? " -c" : "" ) ;
		}else if( structureOptimizationOnly ){
			command += "StructureOptimizer-Mac/GNU-MacOSX/bn_structure" ;
			command += " " + scoresFilePath ;
			command += " -b " + bestScoreCalculator ;
			command += " -z " + initializer ;
			command += " -n " + numSolutions ;
			command += " -k " + numIterations ;
		}else{
			command += "Learner-Mac/GNU-MacOSX/bn_learning" ;
		}
		return command ;
	}
	
	// <editor-fold defaultstate="collapsed" desc="Action Listeners">
    private void jBtnRunMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBtnRunMouseClicked
//        System.out.println( "Vamo a meterle!" ) ;
		String command = get_command() ;
		System.out.println( command ) ;
		executeProcess( command ) ;
		
    }//GEN-LAST:event_jBtnRunMouseClicked

    private void jChkHasHeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChkHasHeaderActionPerformed
        setHasHeader( jChkHasHeader.isSelected() ) ;
    }//GEN-LAST:event_jChkHasHeaderActionPerformed

    private void jChkSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChkSaveFileActionPerformed
		setSaveScoresFile( jChkSaveFile.isSelected() ) ;
    }//GEN-LAST:event_jChkSaveFileActionPerformed

    private void jChkScoresOnlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChkScoresOnlyActionPerformed
        setScoresOnly( jChkScoresOnly.isSelected() ) ;
    }//GEN-LAST:event_jChkScoresOnlyActionPerformed

    private void jChkStructureOptimizationOnlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChkStructureOptimizationOnlyActionPerformed
		setStructureOptimizationOnly( jChkStructureOptimizationOnly.isSelected() ) ;
    }//GEN-LAST:event_jChkStructureOptimizationOnlyActionPerformed

    private void jBtnDataSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDataSetActionPerformed
        JFileChooser fChooser = new JFileChooser() ;
		fChooser.setFileSelectionMode( JFileChooser.FILES_ONLY ) ;
		FileNameExtensionFilter filter = new FileNameExtensionFilter( "CSV files" , "csv" ) ;
		fChooser.setFileFilter( filter ) ;
		int sel = fChooser.showOpenDialog( null ) ;
		if( sel == JFileChooser.CANCEL_OPTION ){
			jTxtDataSet.setText( "" ) ;
		}else{ // Select
			File file = fChooser.getSelectedFile() ;
			jTxtDataSet.setText( file.getPath() ) ;
			dataSetPath = file.getPath() ;
		}
    }//GEN-LAST:event_jBtnDataSetActionPerformed

    private void jBtnScoresFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnScoresFileActionPerformed
        JFileChooser fChooser = new JFileChooser() ;
		fChooser.setFileSelectionMode( JFileChooser.FILES_ONLY ) ;
		int sel = fChooser.showSaveDialog( null ) ;
		if( sel == JFileChooser.CANCEL_OPTION ){
			jTxtScoresFile.setText( "" ) ;
		}else{ // Select
			File file = fChooser.getSelectedFile() ;
			String filePath = file.getPath() ;
			if( !filePath.endsWith( ".pss" ) ) filePath += ".pss" ;
			jTxtScoresFile.setText( filePath ) ;
			scoresFilePath = filePath ;
		}
    }//GEN-LAST:event_jBtnScoresFileActionPerformed

    private void jBtnBayesNetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBayesNetActionPerformed
        JFileChooser fChooser = new JFileChooser() ;
		fChooser.setFileSelectionMode( JFileChooser.FILES_ONLY ) ;
		int sel = fChooser.showSaveDialog( null ) ;
		if( sel == JFileChooser.CANCEL_OPTION ){
			jTxtBayesNet.setText( "" ) ;
		}else{ // Select
			File file = fChooser.getSelectedFile() ;
			jTxtBayesNet.setText( file.getPath() ) ;
			bayesianNetworkPath = file.getPath() ;
		}
    }//GEN-LAST:event_jBtnBayesNetActionPerformed

    private void jChkWhileCalculatingPruneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChkWhileCalculatingPruneActionPerformed
        setWhileCalculatingPrune( jChkWhileCalculatingPrune.isSelected() ) ;
    }//GEN-LAST:event_jChkWhileCalculatingPruneActionPerformed

    private void jChkEndOfCalculatingPruneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChkEndOfCalculatingPruneActionPerformed
        setEndOfCalculatingPrune( jChkEndOfCalculatingPrune.isSelected() ) ;
    }//GEN-LAST:event_jChkEndOfCalculatingPruneActionPerformed

    private void jCbxMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxMethodActionPerformed
        setParentSetMethod( jCbxMethod.getSelectedIndex() ) ;
    }//GEN-LAST:event_jCbxMethodActionPerformed

    private void jCbxScoringFunctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxScoringFunctionActionPerformed
        setScoringFunction( jCbxScoringFunction.getSelectedIndex() ) ;
    }//GEN-LAST:event_jCbxScoringFunctionActionPerformed

    private void jCbxAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxAlgorithmActionPerformed
        setAlgorithm( jCbxAlgorithm.getSelectedIndex() ) ;
    }//GEN-LAST:event_jCbxAlgorithmActionPerformed

    private void jCbxInitializerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxInitializerActionPerformed
        setInitializer( jCbxInitializer.getSelectedIndex() ) ;
    }//GEN-LAST:event_jCbxInitializerActionPerformed

    private void jCbxBestScoreCalculatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxBestScoreCalculatorActionPerformed
        setBestScoreCalculator( jCbxBestScoreCalculator.getSelectedIndex() ) ;
    }//GEN-LAST:event_jCbxBestScoreCalculatorActionPerformed

    private void jSpnMaxParentSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnMaxParentSizeStateChanged
        setMaxParentSetSize( Integer.valueOf( jSpnMaxParentSize.getValue().toString() ) ) ;
    }//GEN-LAST:event_jSpnMaxParentSizeStateChanged

    private void jSpnRMinStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnRMinStateChanged
        setRMin( Integer.valueOf( jSpnRMin.getValue().toString() ) ) ;
    }//GEN-LAST:event_jSpnRMinStateChanged

    private void jSpnNumThreadsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnNumThreadsStateChanged
        setNumThreads( Integer.valueOf( jSpnNumThreads.getValue().toString() ) ) ;
    }//GEN-LAST:event_jSpnNumThreadsStateChanged

    private void jSpnTimePerVariableStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnTimePerVariableStateChanged
        setTimePerVariable( Integer.valueOf( jSpnTimePerVariable.getValue().toString() ) ) ;
    }//GEN-LAST:event_jSpnTimePerVariableStateChanged

    private void jSpnNumSolutionsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnNumSolutionsStateChanged
        setNumSolutions( Integer.valueOf( jSpnNumSolutions.getValue().toString() ) ) ;
    }//GEN-LAST:event_jSpnNumSolutionsStateChanged

    private void jSpnMaxIterationsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpnMaxIterationsStateChanged
        setMaxIterations( Integer.valueOf( jSpnMaxIterations.getValue().toString() ) ) ;
    }//GEN-LAST:event_jSpnMaxIterationsStateChanged
	// </editor-fold>
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Home().setVisible(true);
			}
		});
	}
	
	// Structure Learning: General Panel
	private String dataSetPath ;
	private String scoresFilePath ;
	private String bayesianNetworkPath ;
	private boolean hasHeader ;
	private char delimiterCharacter ;
	private boolean saveScoresFile ;
	private boolean scoresOnly ;
	private boolean structureOptimizationOnly ;
	
	// Structure Learning: Parent Set Selection Panel
	private String parentSetMethod ;
	private int maxParentSize ;
	private int rMin ;
	private boolean whileCalculatingPrune ;
	private String scoringFunction ;
	private int numThreads ;
	private int timePerVariable ;
	private boolean endOfCalculatingPrune ;
	
	// Structure Learning: Structure Optimization Panel
	private String algorithm ;
	private String bestScoreCalculator ;
	private int numSolutions ;
	private String initializer ;
	private int numIterations ;
	

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBayesNet;
    private javax.swing.JButton jBtnDataSet;
    private javax.swing.JButton jBtnRun;
    private javax.swing.JButton jBtnScoresFile;
    private javax.swing.JComboBox jCbxAlgorithm;
    private javax.swing.JComboBox jCbxBestScoreCalculator;
    private javax.swing.JComboBox jCbxInitializer;
    private javax.swing.JComboBox jCbxMethod;
    private javax.swing.JComboBox jCbxScoringFunction;
    private javax.swing.JCheckBox jChkEndOfCalculatingPrune;
    private javax.swing.JCheckBox jChkHasHeader;
    private javax.swing.JCheckBox jChkSaveFile;
    private javax.swing.JCheckBox jChkScoresOnly;
    private javax.swing.JCheckBox jChkStructureOptimizationOnly;
    private javax.swing.JCheckBox jChkWhileCalculatingPrune;
    private javax.swing.JFrame jFrameApp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLblAlgorithm;
    private javax.swing.JLabel jLblBNet;
    private javax.swing.JLabel jLblBestScoreCalculator;
    private javax.swing.JLabel jLblDataSet;
    private javax.swing.JLabel jLblDelChar;
    private javax.swing.JLabel jLblInitializer;
    private javax.swing.JLabel jLblMaxIterations;
    private javax.swing.JLabel jLblMaxParentSize;
    private javax.swing.JLabel jLblMethod;
    private javax.swing.JLabel jLblNumSolutions;
    private javax.swing.JLabel jLblNumThreads;
    private javax.swing.JLabel jLblRMin;
    private javax.swing.JLabel jLblScoreFile;
    private javax.swing.JLabel jLblScoringFunction;
    private javax.swing.JLabel jLblTimePerVariable;
    private javax.swing.JPanel jPanelGeneralMLC;
    private javax.swing.JPanel jPanelGeneralSL;
    private javax.swing.JPanel jPanelOtherParametersMLC;
    private javax.swing.JPanel jPanelParentSetSelectionSL;
    private javax.swing.JPanel jPanelStructureOptimizationSL;
    private javax.swing.JSpinner jSpnMaxIterations;
    private javax.swing.JSpinner jSpnMaxParentSize;
    private javax.swing.JSpinner jSpnNumSolutions;
    private javax.swing.JSpinner jSpnNumThreads;
    private javax.swing.JSpinner jSpnRMin;
    private javax.swing.JSpinner jSpnTimePerVariable;
    private javax.swing.JTabbedPane jTabbedHome;
    private javax.swing.JTabbedPane jTabbedMultiLabelClassification;
    private javax.swing.JTabbedPane jTabbedStructureLearning;
    private javax.swing.JTextField jTxtBayesNet;
    private javax.swing.JTextField jTxtDataSet;
    private javax.swing.JTextField jTxtDelimiter;
    private javax.swing.JTextField jTxtScoresFile;
    // End of variables declaration//GEN-END:variables
}
